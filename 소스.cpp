//Call-by-reference : 주소 값을 전달받아서, 함수 외부에 선언된 변수에 접근하는 형태의 함수호출. 따라서 Call-by-address라고도 불린다.
//값을 전달받아 실행시키는 Call-by-value와 다르게 주소에 접근하기 때문에, 함수 외부에 변화를 줄 수 있다.
//cpp에서 Call-by-reference와 Call-by-address가 같다고 하기 애매한데, 주소를 가져오기 위해 포인터를 써도 함수 외부를 변화시키지 않을 수 있기 때문이다.

//포인터와 참조자의 차이
//1. 참조자는 단독으로 선언할 수 없다. 메모리를 할당받지 못하는 참조자는 변수를 대체하는 제 2의 이름일 뿐이다.
//2. 참조자는 가리키는 변수를 변경할 수 없다. 코에 딸기라는 참조자를 붙였다면, 입에 동일하게 딸기라는 참조자를 붙일 수 없다는 것이다.
//3. 더블포인터와 포인터의 배열은 존재하나, 참조자의 참조자나 참조자의 포인터나 참조자의 배열은 존재할 수 없다.

#include<iostream>
using namespace std;

void swap(int& a, int& b)//선언과 동시에 변수가 선언되어야 하지만, main 함수 내에서 이미 선언되어 있다면 문제가 없다.
{
	int temp = a;
	a = b;
	b = temp;
}//참조자는 변수의 주소를 가져오기 때문에, 주소를 할당하는 포인터와 같이 외부 변수에 변화를 줄 수 있다.

int main()
{
	int a = 1;
	int b = 2;

	swap(a, b);
	cout << "a: " << a << endl;
	cout << "b: " << b << endl;
	return 0;
}